name: Release

permissions:
  contents: write

on:
  push:
    tags: [ 'v*.*.*' ]

  workflow_dispatch:
    inputs:
      releaseTag:
        description: 'Existing git tag to be released (i.e. v1.0.0)'
        required: true

jobs:

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go environment
        uses: actions/setup-go@v2
        with:
          go-version: '1.17'

      - name: Install libpcsc
        run: sudo apt-get install -y libpcsclite-dev pcscd pcsc-tools

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          # https://github.com/actions/checkout/issues/100
          fetch-depth: 0

      - name: Install test tools
        run: |
          make test-tools

      - name: Run Tests
        run: |
          make test

  release:
    runs-on: ubuntu-latest
    needs: test
    outputs:
      RELEASE_TAG: ${{ steps.env.outputs.RELEASE_TAG }}
    steps:
      - name: Setup ENV
        id: env
        run: |
          if [[ "${GITHUB_EVENT_NAME}" == "workflow_dispatch" ]]; then
            RELEASE_TAG=${{ github.event.inputs.releaseTag }}
          elif [[ "${GITHUB_REF}" == refs/tags/v*.*.* ]]; then
            RELEASE_TAG=${GITHUB_REF/refs\/tags\//}
          fi
          if [[ "${RELEASE_TAG}" != v*.*.* ]]; then
            echo "invalid release tag (${RELEASE_TAG} - ${GITHUB_REF}), only semver is allowed (i.e v*.*.*)"
            exit 1
          fi
          echo "::set-output name=RELEASE_TAG::${RELEASE_TAG}"

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Release
        uses: softprops/action-gh-release@v0.1.14
        with:
          tag_name: ${{ steps.env.outputs.RELEASE_TAG }}
